<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>C/C++位运算符</title>
    <url>/2020/03/31/20033102/</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th align="center">符号</th>
<th align="center">意义</th>
<th align="left">备注</th>
</tr>
</thead>
<tbody><tr>
<td align="center">&amp;</td>
<td align="center">与</td>
<td align="left"></td>
</tr>
<tr>
<td align="center">^</td>
<td align="center">异或</td>
<td align="left"></td>
</tr>
<tr>
<td align="center">&brvbar;</td>
<td align="center">或</td>
<td align="left"></td>
</tr>
<tr>
<td align="center">~</td>
<td align="center">取反</td>
<td align="left">注意不是“！”</td>
</tr>
<tr>
<td align="center">&lt;&lt;</td>
<td align="center">左移</td>
<td align="left"></td>
</tr>
<tr>
<td align="center">&gt;&gt;</td>
<td align="center">右移</td>
<td align="left">&gt;&gt;1 可以简单看作 /2</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>C/C++</tag>
        <tag>位运算</tag>
      </tags>
  </entry>
  <entry>
    <title>链表是否有环问题</title>
    <url>/2020/03/31/20033101/</url>
    <content><![CDATA[<h4 id="问题一：判断链表是否有环"><a href="#问题一：判断链表是否有环" class="headerlink" title="问题一：判断链表是否有环"></a>问题一：判断链表是否有环</h4><p><strong>快慢指针法</strong><br><br>表头开始，slow指针每次走一步，fast指针每次走两步。<br>两者相遇则有环，<code>fast==NULL || fast-&gt;next==NULL</code>则无环。<br>这一问题较为简单，但通过这一问题我们可以得到一个<strong>相遇点</strong>，有助于解决进一步的问题。<a id="more"></a></p>
<h4 id="问题二：求链表中环的距离"><a href="#问题二：求链表中环的距离" class="headerlink" title="问题二：求链表中环的距离"></a>问题二：求链表中环的距离</h4><p>问题一我们得到的相遇点就是环上的一点，因此求环的距离就变得很简单。<br>只需要记录相遇点的位置，从相遇点发出一个指针每次走一步并计数，再次到达相遇点时便求出了链表中环的距离。</p>
<h4 id="问题三：找到环的入口结点"><a href="#问题三：找到环的入口结点" class="headerlink" title="问题三：找到环的入口结点"></a>问题三：找到环的入口结点</h4><p><strong>解法一</strong>&emsp;基于问题二得到的距离，可以采用双指针法，一个指针从表头出发，另一个指针先走一个环的距离，再同表头指针一起前进。这两个指针一直隔着一个环的距离，那么他们再次相遇的点，是第一个指针刚进入环的点，即环的入口结点。<br><br><strong>解法二</strong>&emsp;相对而言，解法一比较容易理解，但还有一种更简单的方法得到环的入口结点。<br><br>同样是双指针法，但这次，一个指针在表头，另一个指针在问题一得到的相遇点。两指针再次相遇点即为环的入口结点。<br><br><img src="/images/20033101.png" /> <br><br>如图，表头为<code>A</code>，环入口为<code>B</code>，相遇点为<code>C</code>，AB距离为<code>a</code>，BC距离为<code>b</code>，环长度为<code>r</code>，那么CB距离为<code>r-b</code>。<br><br>slow指针走到C走的距离为<code>S = a + b</code>，fast走过的距离为slow的两倍，假设fast已经走了n圈，即<code>2S = a + nr + b</code>。<br>化简<code>2(a + b) = a + b + nr</code>，得到<code>a = nr - b = (n - 1)r + r - b</code>。<br>即<code>AB = (n - 1)r + CB</code>，解释一下就是A到B的距离，等于从C开始走n-1圈再走到B，不正是两点相遇？</p>
]]></content>
      <tags>
        <tag>数据结构</tag>
        <tag>链表</tag>
      </tags>
  </entry>
  <entry>
    <title>今日树洞</title>
    <url>/2020/03/30/20033002/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="别试了 = =" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">密码：</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="f65c127879828622223f313d802f06c468d5689e9395966682f95312327c8f74">ae8f79f7a8931a4f1f06de233e716013c1c34d445eb994140154c0990bccbec7566833ec7cb22a7d1cd36eabb1cb07311a8b4fc5aae6305cbc72f73f74b6fb602963662609a05ae706db072d6222e4a04194d4bbc2641c3fe03c3ed34492402ef447ffe5a197b714cb6311f8ae88c2f409d843f54f11b100ab6cc3cdce568788a1a196885e12caad82bc166cce4e932f62c57ff2c1fdbd09c646c25e5faf79c3bf5d4ea68d1e9c2077462712728ec3c0cce793be7584ce2ca75015301434b7d8c136b023e4b8e6073b4f531b91ab57f7addef83eb295dd16294ca296b47d1a341ae0ca8c785514e97cc4ebfafca59dc76f01660a49ce9b09c1b70f655aac90e46e3a3e65f5b80e2a02f8b89e4bf05199a619e179780555c32a32a0d3bea2c8c298146a645309943062d135f8b5f194ee72f54a3b62ff3328cc8774af3c6036c38b75d02e046d7693e94db68d496e86abe3a534c0b7b7a5475c20da772c8d46016da55f77c60694adb0f49fded343273118bfd606fea8c31eac197be6db6aafaaa8e9a7085e3973f07d6df4d3617e9be2f2e1fa2c9014cb33cf21f3de27441405513d034c956de64157b3434a3570dadfa01b4f655462504d450ecb3a468b7719</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>树洞</tag>
        <tag>约瑟夫</tag>
      </tags>
  </entry>
  <entry>
    <title>1.2 体系结构与参考模型</title>
    <url>/2020/03/30/20033001/</url>
    <content><![CDATA[<ol>
<li>分层的目的：</li>
</ol>
<ul>
<li>降低协议设计和调试过程的复杂性</li>
<li>便于对网络进行研究、实现和维护</li>
<li>促进标准化工作<br><a id="more"></a></li>
</ul>
<ol start="2">
<li>层次越多，额外开销越大，效率越低；<br><br>层次越少，每层协议越复杂，清晰程度越低。<br>&emsp;</li>
<li>和楼层相似，层次越高，层数越大。<br><br>不同机器的同一层称为对等层，同一层的实体称为对等实体。<br><br>n层实体实现的服务为n+1层所利用。<br>&emsp;</li>
<li>每层都有自己的数据传送单位，即协议数据单元（PDU），<br><br>每个PDU都分为两部分：</li>
</ol>
<ul>
<li>服务数据单元（SDU）</li>
<li>协议控制信息（PCI）<br><br>物理层的PDU称为比特，链路层的PDU称为帧，网络层的PDU称为分组，传输层的PDU称为报文。<br><br>第n层的协议数据单元记为n-PDU，同理有n-SDU，n-PCI。<br><br><b>n-SDU + n-PCI = n-PDU = (n-1)-SDU</b><br>&emsp;</li>
</ul>
<ol start="5">
<li>网络协议（Network Protocol）是针对对等实体而言的，是水平的。<br><br>协议由语法、语义和同步三部分组成。<br>&emsp;</li>
<li>典型的接口上，同一结点相邻两层的实体通过服务访问点（Service Access Point，SAP）进行交互。<br><br>第n层的SAP就是第n+1层可以访问第n层服务的地方，SAP是一个抽象的概念，或者说，逻辑接口。<br>&emsp;</li>
<li>服务是指下层为紧邻的上层提供的功能调用，是垂直的。<br><br>OSI中将服务原语划分为4类：</li>
</ol>
<ul>
<li>请求（Request）。</li>
<li>指示（Indication）。</li>
<li>响应（Response）。</li>
<li>证实（Confirmation）。<br><br>有应答服务包括4类，无应答只有请求和指示。<br></li>
</ul>
<ol start="8">
<li>计算机网络提供的服务分类：</li>
</ol>
<ul>
<li>面向连接服务和无连接服务</li>
<li>可靠服务和不可靠服务</li>
<li>有应答服务和无应答服务</li>
</ul>
<ol start="9">
<li>ISO/OSI参考模型<br><br>第七层： 应用层（Application Layer）<br><br>第六层： 表示层（Presentation Layer）<br><br>第五层： 会话层（Session Layer）<br><br>第四层： 传输层（Transport Layer）<br><br>第三层： 网络层（Network Layer）<br><br>第二层： 数据链路层（Data Link Layer）<br><br>第一层： 物理层（Physical Layer）<br>&emsp;</li>
<li>物理层协议也称物理层规程。<br>&ensp;</li>
<li>TCP/IP模型<br><br>第四层： 应用层，即，OSI模型5、6、7层<br><br>第三层： 传输层，即，OSI第四层<br><br>第二层： 网际层，即，OSI第三层<br><br>第一层： 网络接口层，即，OSI模型1、2层<br>&emsp;</li>
<li>OSI网络层支持无连接和面向连接的通信，传输层仅有面向连接；<br><br>TCP/IP网络层仅有无连接，传输层有无连接和面向连接两种。<br>&emsp;</li>
</ol>
]]></content>
      <tags>
        <tag>计算机网络</tag>
        <tag>王道总结</tag>
      </tags>
  </entry>
  <entry>
    <title>1.1 概述</title>
    <url>/2020/03/29/20032901/</url>
    <content><![CDATA[<h5 id="计算机网络就是一些互联的、自治的计算机系统的集合。"><a href="#计算机网络就是一些互联的、自治的计算机系统的集合。" class="headerlink" title="计算机网络就是一些互联的、自治的计算机系统的集合。"></a>计算机网络就是一些互联的、自治的计算机系统的集合。</h5><h5 id="计算机网络基本特征："><a href="#计算机网络基本特征：" class="headerlink" title="计算机网络基本特征："></a>计算机网络基本特征：</h5><ul>
<li>目的：资源共享；</li>
<li>组成单元：分布在不同地理位置的多台独立的“自治计算机”；</li>
<li>网络中的计算机必须遵循的统一规则——网络协议。<a id="more"></a></li>
</ul>
<hr>
<h5 id="计算机网络的组成："><a href="#计算机网络的组成：" class="headerlink" title="计算机网络的组成："></a>计算机网络的组成：</h5><ul>
<li>组成部分：硬件、软件、协议；</li>
<li>工作方式：边缘部分、核心部分；</li>
<li>功能组成：通信子网、资源子网。</li>
</ul>
<hr>
<h5 id="计算机网络的功能："><a href="#计算机网络的功能：" class="headerlink" title="计算机网络的功能："></a>计算机网络的功能：</h5><ul>
<li>数据通信；</li>
<li>资源共享；</li>
<li>分布式处理；</li>
<li>提高可靠性；</li>
<li>负载均衡。</li>
</ul>
<hr>
<h5 id="计算机网络分类："><a href="#计算机网络分类：" class="headerlink" title="计算机网络分类："></a>计算机网络分类：</h5><ol>
<li>按分布范围：</li>
</ol>
<ul>
<li>广域网（WAN）; </li>
<li>城域网（MAN）; </li>
<li>局域网（LAN）; </li>
<li>个人区域网（PAN）, 无线个人区域网（WPAN）。</li>
</ul>
<ol start="2">
<li>按传输技术：</li>
</ol>
<ul>
<li>广播式网络；</li>
<li>点对点网络。</li>
</ul>
<ol start="3">
<li>按拓扑结构：</li>
</ol>
<ul>
<li>星形网络；</li>
<li>总线形网络；</li>
<li>环形网络；</li>
<li>网状形网络。</li>
</ul>
<ol start="4">
<li>按使用者：</li>
</ol>
<ul>
<li>公用网（Public Network）；</li>
<li>专用网（Private Network）。</li>
</ul>
<ol start="5">
<li>按交换技术：</li>
</ol>
<ul>
<li>电路交换网络；</li>
<li>报文交换网络；</li>
<li>分组交换网络（包交换网络）。</li>
</ul>
<ol start="6">
<li>按传输介质：</li>
</ol>
<ul>
<li>有线网络；</li>
<li>无线网络。</li>
</ul>
<hr>
<h5 id="因特网的所有标准都以RFC-Request-For-Comments-的形式在因特网上发布。"><a href="#因特网的所有标准都以RFC-Request-For-Comments-的形式在因特网上发布。" class="headerlink" title="因特网的所有标准都以RFC(Request For Comments)的形式在因特网上发布。"></a>因特网的所有标准都以RFC(Request For Comments)的形式在因特网上发布。</h5><h5 id="RFC要上升为因特网的正式标准需经过以下4个阶段："><a href="#RFC要上升为因特网的正式标准需经过以下4个阶段：" class="headerlink" title="RFC要上升为因特网的正式标准需经过以下4个阶段："></a>RFC要上升为因特网的正式标准需经过以下4个阶段：</h5><ul>
<li>因特网草案（Internet Draft）；</li>
<li>建议标准（Proposed Standard）；</li>
<li>草案标准（Draft Standard）；</li>
<li>因特网标准（Internet Standard）。</li>
</ul>
<hr>
<h5 id="网络标准化相关组织："><a href="#网络标准化相关组织：" class="headerlink" title="网络标准化相关组织："></a>网络标准化相关组织：</h5><ul>
<li>国际标准化组织（ISO）。</li>
<li>国际电信联盟（ITU）。</li>
<li>国际电气电子工程师协会（IEEE）。</li>
</ul>
<hr>
<h5 id="计算机网络性能指标："><a href="#计算机网络性能指标：" class="headerlink" title="计算机网络性能指标："></a>计算机网络性能指标：</h5><ul>
<li>带宽（Bandwidth）：网络的通信线路所能传送数据的能力，<br>即最高数据率，单位为比特/秒（b/s）。</li>
<li>时延（Delay）：发送时延、传播时延、处理时延、排队时延。</li>
<li>时延带宽积 = 传播时延 × 信道带宽。</li>
<li>往返时延（Round-Trip Time，RTT）：往 + 返。</li>
<li>吞吐量：给定时间内通过某个网络的数据量。真实数据总量。</li>
<li>速率（Speed）：数据率或比特率，指实际情况，最高速率就是带宽。</li>
</ul>
]]></content>
      <tags>
        <tag>计算机网络</tag>
        <tag>王道总结</tag>
      </tags>
  </entry>
</search>
